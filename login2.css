* {
    /* 初始化 */
    margin: 0;
    padding: 0;
    /* 盒子模型 */
    box-sizing: border-box;
}
body {
    /* 弹性布局 让页面元素垂直+水平居中 */
    display: flex;
    justify-content: center;
    align-items: center;
    /* 让页面元素始终占浏览器可视区域总宽度 */
    height: 100vh;
    /* 背景渐变色 */
    background: linear-gradient(#141e30,#243b55);
}
.login {
    display: flex;
    /* 主轴 垂直方向 */
    flex-direction: column;
    /* 交叉轴居中 水平方向 */
    align-items: center;
    width: 400px;
    padding: 40px;
    background-color: rgba(0,0,0,0.2);
    box-shadow: 0 15px 25px rgba(0,0,0,0.4);
}
.login h2 {
    color: #fff;
    margin-bottom: 30px;
}
.login .login_box {
    position: relative;
    width: 100%;
}
.login .login_box input {
    /* 清除input框自带的边框和轮廓 */
    outline: none;
    border: none;
    width: 100%;
    padding: 10px 0;
    margin-bottom: 30px;
    color: #fff;
    font-size: 16px;
    border-bottom: 1px solid #fff;
    /* 背景颜色为透明色 */
    background-color: transparent;
}
.login .login_box label {
    position: absolute;
    top: 0;
    left: 0;
    padding: 10px 0;
    color: #fff;
    /* 这个属性默认值为auto(默认元素能被点击) 设置值为none 元素不能被点击 可见不可及 */
    pointer-events: none;
    /* 加个过渡效果 */
    transition: all 0.5s;
}
/* :focus 选择器是当input获得焦点时触发样式 +为相邻兄弟选择器 寻找与input相邻的label */
/* :valid 选择器是判断input框中内容是否合法(检查合法性) 合法则执行下面的属性代码 不合法则不执行 因为input框写了required */
/* 没有required则input框的值一直被认为合法所以一直是下方样式 但是密码框不会 密码为空时不合法 就不会触发下方样式 密码框不为空时才触发 */
/* 例如用户框去掉required 则会一直触发下方样式 加上required 失去焦点时就会回复原本样式*/
.login .login_box input:focus + label,
.login .login_box input:valid + label {
    top: -20px;
    color: #03e9f4;
    font-size: 12px;
}
.login a {
    overflow: hidden;
    position: relative;
    padding: 10px 20px;
    color: #03e9f4;
    text-decoration: none;
    /* 过渡 */
    transition: all 0.5s;
}
.login a:hover {
    color: #fff;
    border-radius: 5px;
    background-color: #03e9f4;
    box-shadow: 0 0 5px #03e9f4, 0 0 25px #03e9f4,0 0 50px #03e9f4, 0 0 100px #03e9f4;
}
.login a span {
    position: absolute;
}
.login a span:first-child {
    top: 0;
    left: -100%;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, transparent, #03e9f4);
    /* 动画 名称 时长 linear匀速运动 infinite无限次运动 */
    animation: move1 1s linear infinite;
}
.login a span:nth-child(2) {
    right: 0;
    top: -100%;
    width: 2px;
    height: 100%;
    background: linear-gradient(transparent, #03e9f4);
    /* 0.25s delay */
    animation: move2 1s linear 0.25s infinite;
}
.login a span:nth-child(3) {
    right: -100%;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(to left, transparent, #03e9f4);
    animation: move3 1s linear 0.5s infinite;
}
.login a span:last-child {
    left: 0;
    bottom: -100%;
    width: 2px;
    height: 100%;
    background: linear-gradient(#03e9f4, transparent);
    animation: move4 1s linear 0.75s infinite;
}
@keyframes move1 {
    0% {
        left: -100%;
    }
    50%,
    100% {
        left: 100%;
    }
}
@keyframes move2 {
    0% {
        top: -100%;
    }
    50%,
    100% {
        top: 100%;
    }
}
@keyframes move3 {
    0% {
        right: -100%;
    }
    50%,
    100% {
        right: 100%;
    }
}
@keyframes move4 {
    0% {
        bottom: -100%;
    }
    50%,
    100% {
        bottom: 100%;
    }
}
